{"id":"actions/index.js","dependencies":[{"name":"C:\\Users\\Matheus Sabes\\Downloads\\shop4kids\\package.json","includedInParent":true,"mtime":1582564439840},{"name":"axios","loc":{"line":1,"column":18},"parent":"C:\\Users\\Matheus Sabes\\Downloads\\shop4kids\\app\\actions\\index.js","resolved":"C:\\Users\\Matheus Sabes\\Downloads\\shop4kids\\node_modules\\axios\\index.js"},{"name":"../polyfill/customEvent","loc":{"line":2,"column":7},"parent":"C:\\Users\\Matheus Sabes\\Downloads\\shop4kids\\app\\actions\\index.js","resolved":"C:\\Users\\Matheus Sabes\\Downloads\\shop4kids\\app\\polyfill\\customEvent.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.quickviewPrice = quickviewPrice;\nexports.quickvieOffer = quickvieOffer;\nexports.quickviewPayment = quickviewPayment;\nexports.quickviewImages = quickviewImages;\nexports.quickviewAvailabled = quickviewAvailabled;\nexports.quickviewSaleable = quickviewSaleable;\nexports.quickviewAttributes = quickviewAttributes;\nexports.setQuickviewSaleable = setQuickviewSaleable;\nexports.quickviewSkuSelected = quickviewSkuSelected;\nexports.quickviewSetSkuSelected = quickviewSetSkuSelected;\nexports.addCart = addCart;\nexports.isBuy = isBuy;\nexports.buyFinish = buyFinish;\nexports.buyError = buyError;\nexports.resetBuy = resetBuy;\nexports.minicart = minicart;\nexports.session = session;\nexports.minicartData = minicartData;\nexports.minicartFetch = minicartFetch;\n\nvar _axios = _interopRequireDefault(require(\"axios\"));\n\nrequire(\"../polyfill/customEvent\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction quickviewPrice(price) {\n  return {\n    type: 'QUICKVIEW_PRICE',\n    price: price\n  };\n}\n\nfunction quickvieOffer(offer) {\n  return {\n    type: 'QUICKVIEW_OFFER',\n    offer: offer\n  };\n}\n\nfunction quickviewPayment(payment) {\n  return {\n    type: 'QUICKVIEW_PAYMENT',\n    payment: payment\n  };\n}\n\nfunction quickviewImages(images) {\n  return {\n    type: 'QUICKVIEW_IMAGES',\n    images: images\n  };\n}\n\nfunction quickviewAvailabled(bool) {\n  return {\n    type: 'QUICKVIEW_AVAILABLED',\n    availabled: bool\n  };\n}\n\nfunction quickviewSaleable(bool) {\n  return {\n    type: 'QUICKVIEW_SALEABLE',\n    saleable: bool\n  };\n}\n\nfunction quickviewAttributes(price, offer, payment, images, availabled, saleable) {\n  return function (dispatch) {\n    dispatch(quickviewPrice(price));\n    dispatch(quickvieOffer(offer));\n    dispatch(quickviewPayment(payment));\n    dispatch(quickviewImages(images));\n    dispatch(quickviewAvailabled(availabled));\n    dispatch(quickviewSaleable(saleable));\n  };\n}\n\nfunction setQuickviewSaleable(saleable) {\n  return function (dispatch) {\n    dispatch(quickviewSaleable(saleable));\n  };\n}\n\nfunction quickviewSkuSelected(sku) {\n  return {\n    type: 'QUICKVIEW_SKU_SELECTED',\n    sku: sku\n  };\n}\n\nfunction quickviewSetSkuSelected(sku) {\n  return function (dispatch) {\n    dispatch(quickviewSkuSelected(sku));\n  };\n}\n\nfunction addCart(cart) {\n  var total = cart.length;\n  var count = 0;\n  return function (dispatch) {\n    dispatch(isBuy(true));\n    cart.forEach(function (item) {\n      _axios.default.post('/web_api/cart/', {\n        Cart: item\n      }).then(function (response) {\n        if (++count >= total) {\n          dispatch(isBuy(false));\n          dispatch(buyFinish(true));\n          var UPDATECART = new CustomEvent('UPDATECART', {\n            detail: response.data\n          });\n          window.dispatchEvent(UPDATECART);\n        }\n\n        return null;\n      }).catch(function (error) {\n        var msg = '';\n        Array.from(error.response.data.causes).forEach(function (err) {\n          return msg += err;\n        });\n        dispatch(isBuy(false));\n        dispatch(buyError(true, msg));\n      });\n    });\n  };\n}\n\nfunction isBuy(bool) {\n  return {\n    type: 'IS_BUY',\n    isbuy: bool\n  };\n}\n\nfunction buyFinish(bool) {\n  return {\n    type: 'BUY_FINISH',\n    buyfinish: bool\n  };\n}\n\nfunction buyError(error, msg) {\n  return {\n    type: 'BUY_ERROR',\n    error: error,\n    msg: msg\n  };\n}\n\nfunction resetBuy() {\n  return function (dispatch) {\n    dispatch(buyFinish(false));\n    dispatch(isBuy(false));\n    dispatch(buyError(false, ''));\n  };\n}\n\nfunction minicart(minicart) {\n  return {\n    type: 'MINICART',\n    minicart: minicart\n  };\n}\n\nfunction session(session) {\n  return {\n    type: 'SESSION',\n    session: session\n  };\n}\n\nfunction minicartData(hash, cart) {\n  return function (dispatch) {\n    _axios.default.get('/web_api/cart/' + hash).then(function (response) {\n      return response.data;\n    }).then(function (data) {\n      cart['products'] = data.map(function (item) {\n        return item.Cart;\n      });\n      dispatch(minicart(cart));\n      return null;\n    });\n  };\n}\n\nfunction minicartFetch(store) {\n  return function (dispatch) {\n    _axios.default.get('/nocache/app.php?loja=' + store).then(function (response) {\n      return response.data;\n    }).then(function (data) {\n      var hash = data.hash;\n      dispatch(session(data.hash));\n\n      _axios.default.get('/mvc/store/cart/count?loja=' + store + '&hash=' + hash).then(function (response) {\n        return response.data;\n      }).then(function (data) {\n        var cart = {}; // cart['products']    = data.cart.Products;\n\n        cart['price'] = data.cart.price;\n        cart['amount'] = parseInt(data.cart.amount); // Update Amount\n\n        Array.from(document.querySelectorAll('[data-cart=amount-auaha]')).forEach(function (item) {\n          if (cart.amount == 1) {\n            item.innerHTML = '0' + cart.amount;\n          } else if (cart.amount < 10) {\n            item.innerHTML = '0' + cart.amount;\n          } else {\n            item.innerHTML = cart.amount;\n          }\n        });\n        Array.from(document.querySelectorAll('[data-cart=price]')).forEach(function (item) {\n          return item.innerHTML = cart.price;\n        });\n        if (cart.amount) dispatch(minicartData(hash, cart));else {\n          cart['products'] = [];\n          dispatch(minicart(cart));\n        }\n      });\n\n      return null;\n    });\n  };\n}"},"sourceMaps":null,"error":null,"hash":"a0cdcf1b5b565586e0fe394e055e1285","cacheData":{"env":{}}}