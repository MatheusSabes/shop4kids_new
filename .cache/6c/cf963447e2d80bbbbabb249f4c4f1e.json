{"id":"../node_modules/axios/lib/core/settle.js","dependencies":[{"name":"C:\\Users\\Matheus Sabes\\Downloads\\shop4kids\\package.json","includedInParent":true,"mtime":1582564439840},{"name":"C:\\Users\\Matheus Sabes\\Downloads\\shop4kids\\node_modules\\axios\\package.json","includedInParent":true,"mtime":1582564623617},{"name":"./createError","loc":{"line":3,"column":26},"parent":"C:\\Users\\Matheus Sabes\\Downloads\\shop4kids\\node_modules\\axios\\lib\\core\\settle.js","resolved":"C:\\Users\\Matheus Sabes\\Downloads\\shop4kids\\node_modules\\axios\\lib\\core\\createError.js"}],"generated":{"js":"'use strict';\n\nvar createError = require('./createError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  if (!validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n"},"sourceMaps":null,"error":null,"hash":"db7c24c17e1cf8e550e20bec6052ed57","cacheData":{"env":{}}}