{"id":"../node_modules/react-redux/es/utils/useIsomorphicLayoutEffect.js","dependencies":[{"name":"C:\\Users\\Matheus Sabes\\Downloads\\shop4kids\\package.json","includedInParent":true,"mtime":1582564439840},{"name":"C:\\Users\\Matheus Sabes\\Downloads\\shop4kids\\node_modules\\react-redux\\package.json","includedInParent":true,"mtime":1582564623616},{"name":"react","loc":{"line":1,"column":43},"parent":"C:\\Users\\Matheus Sabes\\Downloads\\shop4kids\\node_modules\\react-redux\\es\\utils\\useIsomorphicLayoutEffect.js","resolved":"C:\\Users\\Matheus Sabes\\Downloads\\shop4kids\\node_modules\\react\\index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useIsomorphicLayoutEffect = void 0;\n\nvar _react = require(\"react\");\n\n// React currently throws a warning when using useLayoutEffect on the server.\n// To get around it, we can conditionally useEffect on the server (no-op) and\n// useLayoutEffect in the browser. We need useLayoutEffect to ensure the store\n// subscription callback always has the selector from the latest render commit\n// available, otherwise a store update may happen between render and the effect,\n// which may cause missed updates; we also must ensure the store subscription\n// is created synchronously, otherwise a store update may occur before the\n// subscription is created and an inconsistent state may be observed\nvar isHopefullyDomEnvironment = typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined';\nvar useIsomorphicLayoutEffect = isHopefullyDomEnvironment ? _react.useLayoutEffect : _react.useEffect;\nexports.useIsomorphicLayoutEffect = useIsomorphicLayoutEffect;"},"sourceMaps":null,"error":null,"hash":"cac3a24423b6bdf973ee0747d54f7c4d","cacheData":{"env":{}}}